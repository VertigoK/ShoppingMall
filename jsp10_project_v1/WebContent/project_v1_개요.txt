00. 프로젝트 실행을 위한 설정
    1) Eclipse에 해당 프로젝트 import
       - File -> Import -> General -> Projects from Folder or Archive ->
         Import source [Directory] -> 'jsp10_project_v1' 폴더 선택 -> Finish
    2) 프로젝트 context path를 "/"로 변경
       - Tomcat 서버의 'Add and Remove' 기능을 통해 해당 프로젝트를 서버에 Add시킴
       - server.xml 파일에서 path 수정 -> Context docBase="jsp10_project_v1" path="/" ...
    3) MariaDB 밑에 데이터베이스(shop) 생성 후 3개의 테이블(members, products, orders) 생성
       - orders는 members와 products의 데이터를 참조(FK)하고 있으므로 가장 나중에 생성
       - 각 테이블 생성을 위한 3개의 SQL 파일이 /WebContent/sql/에 위치함

01. 구현 목표
    1) 인터넷 쇼핑몰 구현
    2) 고객의 입장에서 기본적인 쇼핑 기능 구현
       - 회원 가입
       - 회원 탈퇴
       - 로그인
       - 로그아웃
       - 회원 정보 보기
       - 회원 정보 수정
       - 제품 목록 보기
       - 제품 상세 정보 보기 
       - 제품 주문
       - 제품 취소
       - 구매 내역 보기

02. 세부 구현 기능
    1) '제품 목록' 페이지에서 가격별/재고량별 정렬, 보여줄 품목수(10개, 15개, 20개) 선택 가능
    2) 제품 목록/상세 정보 보기는 로그인 전에도 가능하나 주문은 로그인 후에만 가능
    3) 제품 주문은 '제품 목록' 및 '제품 상세 정보' 페이지 모두에서 주문 아이콘 클릭시 가능
    4) 재고량이 0인 제품은 주문 아이콘 모양이 바뀌고 클릭이 안 됨 
    5) 제품 주문시 주문 수량 입력 가능
    6) 주문 수량이 재고량보다 많으면 경고 메시지 발생 후 재입력 요구 
    7) 주문 완료시 주문 수량만큼 제품 재고량에서 차감
    8) 주문 완료시 주문한 금액의 5%를 회원 포인트로 적립
    9) 주문 취소는 주문 완료 후 30분 이상 경과시 불가
   10) 주문 취소 완료시 취소된 수량만큼 제품 재고량 증가
   11) 주문 취소 완료시 취소된 금액의 5%를 회원 포인트에서 차감
   12) '구매 내역' 페이지에서 제품 번호 클릭시 '제품 상세 정보' 페이지로 이동
   13) 로그인 이후엔 로그인 상태임을 '회원 이름' 표시를 통해 항상 보여줌
   14) '회원 이름' 클릭시 '회원 정보' 페이지로 이동
   15) 버튼 색을 상황에 따라 통일
       - 로그인 전: blue(primary)
       - 로그인 후: green(success)
       - 로그아웃 및 각 페이지의 중요 선택 버튼: yellow(warning) 
       - 탈퇴 버튼: red(danger)
   16) 프로젝트에서 구현한 모든 경로(/*.sh, /shop/*.jsp, /misc/*.jsp)에 대해 비정상적인 접근 방지
       - 에러 원인 메시지 발생
       - 이전 페이지로 돌아가거나 로그인/홈 버튼 보여줌
   17) '제품 목록' 페이지에서 하단 페이지 액세스 숫자는 10개를 기본으로 보여주지만 임의의 숫자로 변경시 자동 반영
       - 변경 방법은 아래 '제품 목록' 페이지 참고
      
03. 구현 페이지
    1) 홈: /index.jsp
    2) 회원 가입: /shop/signup.jsp
    3) 회원 탈퇴: /shop/delete_account.jsp
    4) 로그인: /shop/login.jsp
    5) 회원 정보: /shop/member_detail.jsp
    6) 회원 정보 수정: /shop/member_modify.jsp
    7) 회원 구매 내역: /shop/order_list.jsp
    8) 제품 목록: /shop/product_list.jsp
    9) 제품 상세 정보: /shop/product_detail.jsp
   10) 제품 주문 : /shop/product_order.jsp
   11) 회원 가입 성공: /misc/signup_success.jsp
   12) 로그인 성공: /misc/login_success.jsp
   13) 주문 성공: /misc/order_success.jsp
   14) 주문 취소 성공: /misc/cancel_success.jsp
   15) 회원 탈퇴 성공: /misc/delete_success.jsp

04. '홈' 페이지
    1) 로그인 전: 쇼핑 / 회원가입 / 로그인 버튼
    2) 로그인 후: 쇼핑 / 로그아웃 / 회원이름 버튼
   
05. '회원 가입' 페이지
    1) 아이디 / 패스워드 / 이름 / 주소 / 전화번호 / 이메일 입력창 (모두 required)
    2) 회원가입 / Reset / 홈 버튼
    3) 입력한 아이디의 uniqueness 확인 후 동일 아이디 존재시 경고 메시지 발생 및 아이디 재입력 요구 
    4) members 테이블에서 '포인트'와 '가입일자'는 자동 생성되므로 입력 불필요
    5) 가입 완료시 '회원 가입 성공' 페이지로 이동
    6) 회원 가입시 가입 기념으로 10000 포인트 자동 부여됨

06. '회원 탈퇴' 페이지
    1) 아이디(readonly) / 비밀번호(required) 입력창
    2) 탈퇴 / Reset / 이전 버튼
    3) 로그인 여부 확인 후 로그인이 안 된 상태면 경고 메시지 발생 및 로그인/홈 버튼 보여줌
    4) 로그인 상태면 탈퇴 확인을 위해 비밀번호 재입력 요구
       - 입력한 비밀번호가 틀리면 경고 메시지 발생 및 비밀번호 재입력 요구 
    5) 비밀번호 일치시 '회원 탈퇴 성공' 페이지로 이동

07. '로그인' 페이지
    1) 아이디, 비밀번호 입력창 (모두 required)
    2) Login / Reset / 홈 버튼
    3) 입력한 아이디가 존재하지 않거나 비밀번호가 틀리면 경고 메시지 발생 및 재입력 요구
    4) 로그인 성공시 '로그인 성공' 페이지로 이동
    
08. '회원 정보' 페이지
    1) 상단: 홈 / 로그아웃 / 회원이름 버튼
    2) 중간: 회원 정보 보여줌 (비밀번호 제외)
    3) 하단: 회원 탈퇴 / 회원 정보 수정 / 구매 내역 버튼
    4) 각 버튼 클릭시 해당 페이지로 이동
    
09. '회원 정보 수정' 페이지
    1) 상단: 이전 / 홈 / 로그아웃 / 회원 이름 버튼
    2) 중간: 수정할 회원 정보 보여줌 (아이디는 readonly, 포인트와 가입일은 제외) 
    3) 하단: 수정 / 리렛 버튼
    4) 수정 버튼 클릭시 '회원 정보' 페이지로 이동 후 수정된 정보 보여줌
    
10. '회원 구매 내역' 페이지
    1) 상단: 홈 / 로그아웃 / 회원 이름 버튼
    2) 중간: 구매 내역을 역순으로 보여줌 / 주문 취소 아이콘
    3) 제품 번호 클릭시 '제품 상세 정보' 페이지로 이동
    4) 주문 취소 아이콘 클릭시 주문 후 경과된 시간에 따라 주문 취소 여부 결정
       - 주문 완료 후 30분 이상 경과시 경고 메시지 발생 후 이전 페이지로 이동
       - 주문 완료 후 30분 미만 경과시 정상 처리 후 '주문 취소 성공' 페이지로 이동
    5) 주문 취소 완료시 재고량 업데이트(재고량 + 취소 주문 수량) 및 적립되었던 포인트(구매 금액의 5%)를 회원 포인트에서 차감
    
11. '제품 목록' 페이지
    1) 좌상단: 정렬 / 품목수 드랍다운 버튼
       - 기본 정렬(제품 번호 순)
       - 가격별(가격 높은 순 / 가격 낮은 순) 정렬
       - 재고량별(재고 많은 순 / 재고 적은 순) 정렬
       - 품목수(10개, 15개, 20개) 선택
    2) 우상단
       - 로그인 전: 홈 / 로그아웃 / 회원 이름 버튼
       - 로그인 후: 홈 / 로그인 버튼
    3) 중간: 제품 목록을 보여줌
       - 보여주는 품목수는 기본 10개
       - 선택한 정렬 방식과 품목수에 따라 제품 목록을 보여줌
       - 제품 이름 클릭시 '제품 상세 정보' 페이지로 이동
       - 주문 아이콘 클릭시 '제품 주문' 페이지로 이동
       - 로그인 상태가 아니면 경고 메시지를 발생하고 '제품 주문' 페이지로 이동 안 함
       - 재고량이 0인 제품은 아이콘 모양이 바뀌고 클릭 안 됨
    4) 하단: 페이지 액세스 목록 (1,2,3,...,10)
       - 기본 10 페이지를 보여주나 임의의 값으로 변경시 자동 반영
       - /src/main/java/shop/action/ProductListAction.java 파일에서 numOfPages 값을 변경 (기본값 = 10)
       
12. '제품 상세 정보' 페이지
    1) 상단
       - 로그인 전: 이전 / 홈 / 로그아웃 / 회원 이름 버튼
       - 로그인 후: 이전 / 홈 / 로그인 버튼
    2) 중간
       - 제품 상세 정보 보여줌
       - 주문 아이콘 클릭시 '제품 주문' 페이지로 이동
       - 로그인 상태가 아니면 경고 메시지를 발생하고 '제품 주문' 페이지로 이동 안 함
       - 재고량이 0인 제품은 아이콘 모양이 바뀌고 클릭 안 됨

13. '제품 주문' 페이지
    1) 상단: 이전 / 홈 / 로그아웃 / 회원 이름 버튼
    2) 중간: 제품 이름 / 제품 가격 / 재고량 / 주문 수량 보여줌
       - 주문 수량 입력 가능
       - 주문 수량이 재고량보다 많을 경우 경고 메시지 발생 후 재입력 요구
    3) 주문 버튼 클릭시 '주문 성공' 페이지로 이동
    4) 주문 완료시 재고량 업데이트(재고량 - 주문 수량) 및 구매 금액의 5%를 회원 포인트로 적립

14. 데이터베이스 테이블 정의
----------------------------------------------------------------------------------------------------------
1) 회원 목록 테이블 - 테이블 이름: members

회원 아이디(mem_id): varchar(15) primary key,
회원 비밀번호(mem_pw): varchar(20) not null,
회원 이름(mem_name): varchar(20) not null,
회원 주소(mem_addr): varchar(50) not null,
회원 전화번호(mem_tel): varchar(20) not null,
회원 이메일(mem_email): varchar(30) not null,
회원 포인트(mem_pts): int default 0 not null,
회원 가입일(mem_date): datetime default now()
----------------------------------------------------------------------------------------------------------
2) 제품 목록 테이블 - 테이블 이름: products

제품 번호(prd_num): int primary key  -->  101, 102, 103, ..., 999
제품 가격(prd_price): int not null
제품 재고량(prd_stock): int not null
제품 이름(prd_name): varchar(30) not null
제품 종류(prd_kind): varchar(20) not null
제품 제조회사(prd_com): varchar(30) not null
제품 생산일자(prd_date): datetime default now()
----------------------------------------------------------------------------------------------------------
3) 주문 목록 테이블 - 테이블 이름: orders

주문 번호(ord_num): int primary key  -->  1, 2, 3, ... (주문시 자동 생성)
주문 수량(ord_qty): int not null
주문 비용(ord_cost): int not null  -->  ord_cost = prd_price * ord_qty
주문 제품번호(ord_prd_num): int not null
주문 회원아이디(ord_mem_id): varchar(15) not null
주문 일자(ord_date): datetime default now()
constraint fk_ref_to_products foreign key(ord_prd_num) references products(prd_num) on update cascade
constraint fk_ref_to_members foreign key(ord_mem_id) references members(mem_id) on delete cascade
----------------------------------------------------------------------------------------------------------